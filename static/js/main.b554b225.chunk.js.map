{"version":3,"sources":["logo.svg","components/Header.js","components/Task.js","components/Sidebar.js","components/Content.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTask","onCancel","onAddTask","useState","task","setTask","setDate","value","onChange","event","target","disabled","onClick","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","TASKS_HEADER_MAPPING","INBOX","TODAY","NEXT_7","TaskItems","selectedTab","tasks","taskToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Task","showAddTask","setShowAddTask","setTasks","prevstate","newTaskItem","length","Sidebar","setSelectedTab","Content","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAAe,I,YCcAA,EAXA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,8BACI,qBAAKA,UAAU,OAAf,SACI,qBAAKC,IAAI,sGAAsGC,IAAI,oB,gFCAjIC,EAAS,aACf,SAASC,EAAWC,EAAKC,EAAOC,GAC5B,OAAOC,YAAcH,EAAKC,EAAO,CAACC,WAGtC,IAAME,EAAU,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,UACxB,EAAsBC,mBAAS,IAA/B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAsBF,mBAAS,MAA/B,mBAAMP,EAAN,KAAWU,EAAX,KACA,OACI,sBAAKf,UAAU,kBAAf,UACQ,uBAAOgB,MAAOH,EAAMI,SAAU,SAACC,GAAD,OAAWJ,EAAQI,EAAMC,OAAOH,UAC9D,sBAAKhB,UAAU,6BAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,wBACAoB,UAAWP,EACVb,UAAU,UACVqB,QAAS,WACNV,EAAUE,EAAKR,GACfK,IACAI,EAAQ,KANZ,sBAUA,wBAAQd,UAAU,aAAaqB,QAAS,WACpCX,IACAI,EAAQ,KAFZ,uBAKJ,qBAAKd,UAAU,iBAAf,SACI,cAAC,IAAD,CACCsB,YAAa,SAACC,GAAD,OAAOR,EAAQQ,IAC5BC,YAAW,UAAKhB,YAAc,IAAIiB,KAAOtB,IACzCC,WAAYA,EACZE,OAAQH,EACRuB,eAAgB,CACZC,UAAU,CACNP,SAAS,CAAC,CAACQ,OAAO,IAAIH,oBAYjDI,EAAuB,CACzBC,MAAM,QACNC,MAAM,QACNC,OAAO,eAGLC,EAAY,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,YAAYC,EAAU,EAAVA,MACxBC,EAAY,YAAOD,GAYvB,MAXmB,WAAhBD,IACCE,EAAeA,EAAaC,QAC5B,SAACxB,GAAD,OACAyB,YAAQzB,EAAKR,KAAK,IAAIoB,OACtBc,YAAS1B,EAAKR,KAAKmC,YAAQ,IAAIf,KAAO,QAIvB,UAAhBS,IACCE,EAAeA,EAAaC,QAAO,SAACxB,GAAD,OAAU4B,YAAQ5B,EAAKR,UAG1D,qBAAKL,UAAU,uBAAf,SACEoC,EAAaM,KAAI,SAAC7B,GAAD,OACd,sBAAKb,UAAU,aAAf,UACD,4BAAIa,EAAK8B,OACT,kCAAKnC,YAAc,IAAIiB,KAAKZ,EAAKR,MAAMF,eAuCpCyC,EAhCF,SAAC,GAAiB,IAAhBV,EAAe,EAAfA,YACX,EAAsCtB,oBAAS,GAA/C,mBAAMiC,EAAN,KAAoBC,EAApB,KACA,EAAwBlC,mBAAS,IAAjC,mBAAMuB,EAAN,KAAYY,EAAZ,KAMA,OACI,sBAAK/C,UAAU,QAAf,UACI,6BAAK6B,EAAqBK,KAEV,UAAhBA,EACA,sBAAKlC,UAAU,eAAeqB,QAAS,kBAAKyB,GAAe,SAACE,GAAD,OAAeA,MAA1E,UACI,sBAAMhD,UAAU,OAAhB,eACA,sBAAMA,UAAU,gBAAhB,yBAEF,KAED6C,GACG,cAAC,EAAD,CACAlC,UAjBO,SAACgC,EAAMtC,GACtB,IAAM4C,EAAc,CAACN,OAAKtC,KAAMA,GAAQ,IAAIoB,MAC5CsB,GAAS,SAACC,GAAD,4BAAmBA,GAAnB,CAA6BC,QAgB9BvC,SAAU,kBAAMoC,GAAe,MAGlCX,EAAMe,OAAS,EACZ,cAAC,EAAD,CAAWf,MAAOA,EAAQD,YAAaA,IACnC,iD,QCzFLiB,EAtBC,SAAC,GAAiC,EAAhCjB,YAAiC,IAApBkB,EAAmB,EAAnBA,eAE3B,OACE,sBAAKpD,UAAU,UAAf,UACE,sBAAKA,UAAU,SAAUqB,QAAS,WAAK+B,EAAe,UAAtD,UACA,cAAC,IAAD,CAASpD,UAAU,SADnB,WAKA,sBAAKqB,QAAS,WAAK+B,EAAe,UAAlC,UACA,cAAC,IAAD,CAAepD,UAAU,SADzB,WAKA,sBAAKqB,QAAS,WAAK+B,EAAe,WAAlC,UACA,cAAC,IAAD,CAAmBpD,UAAU,SAD7B,qBCLOqD,EATC,WACZ,MAAoCzC,mBAAS,SAA7C,mBAAMsB,EAAN,KAAkBkB,EAAlB,KACA,OACG,0BAASpD,UAAU,UAAnB,UACI,cAAC,EAAD,CAASkC,YAAaA,EAAakB,eAAgBA,IACnD,cAAC,EAAD,CAAOlB,YAAaA,QCOhBoB,MATf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b554b225.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\n// import logo from '../assets/image/logo.png';\r\n\r\nconst Header = ()=>{\r\n    return(\r\n        <header className=\"header\">\r\n            <nav>\r\n                <div className=\"logo\" >\r\n                    <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSFeHLWlPsfGWk6ZK6uAWSeerX7LMFDly7b3Q&usqp=CAU\" alt=\"Todolist\" ></img>\r\n                </div>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","import React, { useState } from 'react';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport 'react-day-picker/lib/style.css';\r\nimport dateFnsFormat from 'date-fns/format'\r\n\r\nimport { addDays, isAfter, isBefore, isToday } from 'date-fns';\r\n\r\n\r\nconst FORMAT = 'dd/MM/yyyy';\r\nfunction formatDate(date,format,locale){\r\n    return dateFnsFormat(date,format,{locale});\r\n}\r\n\r\nconst AddTask = ({onCancel ,onAddTask })=>{\r\n    const[task,setTask] = useState(\"\");\r\n    const[date,setDate] = useState(null); \r\n    return(\r\n        <div className=\"add-task-dialog\" >\r\n                <input value={task} onChange={(event) => setTask(event.target.value)}/>\r\n                <div className=\"add-task-actions-container\">\r\n                    <div className=\"btns-container\" >\r\n                        <button\r\n                        disabled={!task}\r\n                         className=\"add-btn\" \r\n                         onClick={() =>{\r\n                            onAddTask(task,date);\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                        }} >\r\n                        Add Task\r\n                        </button>\r\n                        <button className=\"cancel-btn\" onClick={() => {\r\n                            onCancel();\r\n                            setTask(\"\");\r\n                            }} >Cancel</button>\r\n                    </div>\r\n                    <div className=\"icon-container\" >\r\n                        <DayPickerInput \r\n                         onDayChange={(day)=>setDate(day)}\r\n                         placeholder={`${dateFnsFormat(new Date(),FORMAT)}`} \r\n                         formatDate={formatDate}\r\n                         format={FORMAT}\r\n                         dayPickerProps={{\r\n                             modifiers:{\r\n                                 disabled:[{before:new Date()}],\r\n                             },\r\n                         }}\r\n                         />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nconst TASKS_HEADER_MAPPING = {\r\n    INBOX:\"Inbox\",\r\n    TODAY:\"Today\",\r\n    NEXT_7:\"Next 7 days\",\r\n};\r\n\r\nconst TaskItems = ({selectedTab,tasks}) =>{\r\n    let taskToRender = [...tasks];\r\n    if(selectedTab === \"NEXT_7\"){\r\n        taskToRender = taskToRender.filter(\r\n        (task) =>\r\n        isAfter(task.date,new Date()) && \r\n        isBefore(task.date,addDays(new Date(),7))\r\n        )\r\n       \r\n    }\r\n    if(selectedTab === \"TODAY\"){\r\n        taskToRender = taskToRender.filter((task) => isToday(task.date));\r\n    }\r\n    return(\r\n        <div className=\"task-items-container\" >\r\n         {taskToRender.map((task) =>(\r\n             <div className=\"task-items\" >\r\n            <p>{task.text}</p>\r\n            <p> {dateFnsFormat(new Date(task.date),FORMAT)}</p>\r\n             </div>\r\n    ))}\r\n    </div>\r\n    );\r\n}\r\n\r\nconst Task = ({selectedTab})=>{\r\n    const[showAddTask , setShowAddTask] = useState(false);\r\n    const[tasks,setTasks] = useState([]);\r\n\r\n    const addNewTask = (text, date) =>{\r\n        const newTaskItem = {text,date: date || new Date() };\r\n        setTasks((prevstate) => [...prevstate,newTaskItem]);\r\n    };\r\n    return(\r\n        <div className=\"tasks\" >\r\n            <h1>{TASKS_HEADER_MAPPING[selectedTab]}</h1>\r\n\r\n           {selectedTab === 'INBOX' ? (\r\n            <div className=\"add-task-btn\" onClick={()=> setShowAddTask((prevstate)=> !prevstate)}>\r\n                <span className=\"plus\" >+</span>\r\n                <span className=\"add-task-text\" >Add Task</span>\r\n            </div>\r\n            ):null}\r\n\r\n            {showAddTask && ( \r\n                <AddTask \r\n                onAddTask={addNewTask} \r\n                onCancel={() => setShowAddTask(false)} \r\n            />\r\n            )}\r\n            {tasks.length > 0 ? (\r\n                <TaskItems tasks={tasks}  selectedTab={selectedTab} /> \r\n                ): (<p>No tasks yet</p>)}\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default Task;","import React from 'react';\r\nimport {FaInbox , FaRegCalendarAlt,FaRegCalendar } from 'react-icons/fa';\r\n\r\nconst Sidebar = ({selectedTab, setSelectedTab} )=>{\r\n\r\n    return(\r\n      <div className=\"sidebar\" > \r\n        <div className=\"active\"  onClick={()=>{setSelectedTab(\"INBOX\")}}  >\r\n        <FaInbox className=\"icon\" />\r\n        Inbox\r\n        </div>\r\n\r\n        <div onClick={()=>{setSelectedTab(\"TODAY\")}} >\r\n        <FaRegCalendar className=\"icon\" />\r\n        Today\r\n        </div>\r\n\r\n        <div onClick={()=>{setSelectedTab(\"NEXT_7\")}} >\r\n        <FaRegCalendarAlt  className=\"icon\" />\r\n        Next 7 days\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n}\r\nexport default Sidebar;","import React, { useState } from 'react';\r\nimport Task from './Task';\r\nimport Sidebar from './Sidebar';\r\nconst Content = ()=>{\r\n    const[selectedTab,setSelectedTab] = useState(\"INBOX\");\r\n    return(\r\n       <section className=\"content\" >\r\n           <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n           <Task  selectedTab={selectedTab} />\r\n       </section>\r\n    );\r\n}\r\nexport default Content;","import logo from './logo.svg';\nimport './App.scss';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <Content/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}